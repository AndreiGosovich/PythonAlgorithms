
# Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
# заданный случайными числами на промежутке [-100; 100).
# Выведите на экран исходный и отсортированный массивы.
# Сортировка должна быть реализована в виде функции.
# По возможности доработайте алгоритм (сделайте его умнее).
import random


def dz_7_1(mas_int):
    for i in range(len(mas)):
        shifted = False
        for j in range(0, len(mas) - i - 1):
            if mas[j] < mas[j + 1]:
                mas[j], mas[j + 1] = mas[j + 1], mas[j]
                shifted = True
        if not shifted:
            break
    return mas_int


if __name__ == '__main__':
    mas = []
    for _ in range(10):
        mas.append(random.randint(-100, 100))
    print(mas)
    print(dz_7_1(mas))

# Сложность алгоритма O(n*n/2)
# Пространственная сложность O(1)
# Добавление shifted и условия выхода из цикла убирает лишнию работу по уже отсортированному массиву.
